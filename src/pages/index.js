import Head from "next/head"
import Image from "next/image"
import styles from "../styles/Home.module.css"
import MoviesList from "../components/MoviesList"
import Header from "../components/header"
import { useSession } from "next-auth/react"
import FavoriteMovies from "../components/FavoriteMovies"
import { Grid, GridItem } from "@chakra-ui/react"
import { useRouter } from "next/router"
import { useState, useRef, createContext } from "react"
import MovieDetails from "../components/MovieDetails"

const FavoriteContext = createContext()

function FavoriteProvider({ children }) {
  const [favorites, setFavorites] = useState([])

  return (
    <FavoriteContext.Provider value={{ favorites, setFavorites }}>
      {children}
    </FavoriteContext.Provider>
  )
}

export default function Home({ movies }) {
  const [viewDetails, setViewDetails] = useState(false)
  const [details, setDetails] = useState({})
  const selectedFavorite = useRef({})
  const { data: session } = useSession()

  function handleFavorites(newFavorite) {
    console.log("lista")
    console.log(selectedFavorite.current)
  }

  function handleDetails(movieDetails) {
    setViewDetails(true)
    setDetails(movieDetails)
    console.log(details)
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Movie Mania!</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />

      <main>
        <h1 className="appTitle">Welcome to Movie Mania!</h1>

        {viewDetails ? (
          <MovieDetails movie={details} setViewDetails={setViewDetails} />
        ) : (
          <>
            <div className={styles.list}>
              <Grid
                justifyItems="center"
                templateColumns="repeat(5, 0.16fr)"
                gap={100}
              >
                {movies?.map((movie, i) => (
                  <MoviesList
                    movie={movie}
                    key={i}
                    addFavorite={(newFavorite) => handleFavorites(newFavorite)}
                    showMovieDetails={(movieDetails) =>
                      handleDetails(movieDetails)
                    }
                  />
                ))}
              </Grid>
            </div>
            {session ? (
              <>
                <h1>Your Favorites</h1>
                <FavoriteMovies selectedFavorite={selectedFavorite} />
              </>
            ) : (
              <>
                <h1>Your Favorites</h1>
                <FavoriteMovies selectedFavorite={selectedFavorite} />
              </>
            )}
          </>
        )}
      </main>
    </div>
  )
}

export async function getServerSideProps(ctx) {
  // request movies from api
  let response = await fetch(`http://localhost:3000/api/movies`, {
    method: "GET",
  })
  let data = await response.json()
  let movies = data.movies[0]

  let addedFavorites = await fetch(`http://localhost:3000/api/favorites`, {
    method: "GET",
  })

  // extract the data
  let dataFavorites = await addedFavorites.json()

  return {
    props: {
      movies,
      favorites: dataFavorites.message,
    },
  }
}
