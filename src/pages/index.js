import Head from "next/head"
import Image from "next/image"
import styles from "../styles/Home.module.css"
import MoviesList from "../components/MoviesList"
import Header from "../components/header"
import { useSession } from "next-auth/react"
import FavoriteMovies from "../components/FavoriteMovies"
import { Grid, GridItem } from "@chakra-ui/react"
import { useRouter } from "next/router"
import { useContext, useEffect } from "react"
import MovieDetails from "../components/MovieDetails"
import { MoviesContext, MoviesProvider } from "./context"

export default function Home({ movies }) {
  return (
    <MoviesProvider>
      <HomeContent movies={movies} />
    </MoviesProvider>
  )
}

function HomeContent({ movies, userFavorites }) {
  const { viewDetails, setViewDetails } = useContext(MoviesContext)
  const { details, setDetails } = useContext(MoviesContext)
  const selectedFavorite = useContext(MoviesContext)
  const { favorites, setFavorites } = useContext(MoviesContext)
  const { data: session } = useSession()
  const { catalog, setCatalog } = useContext(MoviesContext)

  useEffect(() => {
    setCatalog(movies)
  }, [])

  function handleAddFavorites(selectedFavorite) {
    const myFavoritesId = favorites.map((favorites) => favorites.id)
    if (
      !myFavoritesId.includes(selectedFavorite.id) ||
      myFavoritesId.length == 0
    ) {
      let updatedCatalog = catalog.filter(
        (catalog) => catalog.id != selectedFavorite.id
      )
      setCatalog(updatedCatalog)
      setFavorites((favorites) => [...favorites, selectedFavorite])
    }
  }

  function handleRemoveFavorites(selectedFavorite) {
    let updatedFavorites = favorites.filter(
      (favorites) => favorites.id != selectedFavorite.id
    )
    let updatedCatalog = catalog
    updatedCatalog.push(selectedFavorite)
    setCatalog(updatedCatalog)
    setFavorites(updatedFavorites)
  }

  function handleDetails(movieDetails) {
    setViewDetails(true)
    setDetails(movieDetails)
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Movie Mania!</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />

      <main>
        <h1 className="appTitle">Welcome to Movie Mania!</h1>

        {catalog.length == 0 && <h3>Nice! You liked all the movies!</h3>}
        {viewDetails ? (
          <MovieDetails
            key="movieDetails"
            movie={details}
            setViewDetails={setViewDetails}
          />
        ) : (
          <>
            <div className={styles.list}>
              <Grid
                justifyItems="center"
                templateColumns="repeat(6, 0.16fr)"
                gap={100}
              >
                {catalog?.map((movie, i) => (
                  <MoviesList
                    movie={movie}
                    key={i}
                    addFavorite={(newFavorite) =>
                      handleAddFavorites(newFavorite)
                    }
                    showMovieDetails={(movieDetails) =>
                      handleDetails(movieDetails)
                    }
                  />
                ))}
              </Grid>
            </div>
            {session ? (
              <>
                <h1>Your Favorites</h1>
                <div className={styles.list}>
                  <Grid
                    justifyItems="center"
                    templateColumns="repeat(6, 0.16fr)"
                    gap={100}
                  >
                    {favorites?.map((favorite, i) => (
                      <FavoriteMovies
                        favorite={favorite}
                        key={i}
                        removeFavorite={(newFavorite) =>
                          handleRemoveFavorites(newFavorite)
                        }
                      />
                    ))}
                  </Grid>
                </div>
              </>
            ) : (
              <>
                <h1>Your Favorites</h1>
                <p>n√£o tem</p>
              </>
            )}
          </>
        )}
      </main>
    </div>
  )
}

export async function getServerSideProps(ctx) {
  // request movies from api
  let response = await fetch(`http://localhost:3000/api/movies`, {
    method: "GET",
  })
  let data = await response.json()
  let movies = data.movies[0]

  let addedFavorites = await fetch(`http://localhost:3000/api/favorites`, {
    method: "GET",
  })

  // extract the data
  let dataFavorites = await addedFavorites.json()

  return {
    props: {
      movies,
      userFavorites: dataFavorites.message,
    },
  }
}
